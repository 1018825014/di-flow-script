def run(data):\n    # to json\n    orderData = json.loads(data['orderData'])\n\n    itemLines = []\n    # 获取当前UTC时间\n    now = datetime.utcnow()\n    formatted_time = now.strftime('%Y-%m-%dT%H:%M:%S.') + ('%03d' % (now.microsecond // 1000))\n    timezone_formatted = '+00:00'\n    final_formatted_time = formatted_time + timezone_formatted\n\n    orderDate = orderData.get('invoiceDate', '')\n    # 检查 orderDate 是否为空\n    if orderDate:\n        # 解析输入时间字符串为 datetime 对象\n        dt = datetime.strptime(orderDate, '%Y-%m-%d %H:%M:%S')\n        # 转换为所需格式\n        isoOrderDate = dt.strftime('%Y-%m-%dT%H:%M:%SZ')\n    else:\n        isoOrderDate = now.strftime('%Y-%m-%dT%H:%M:%SZ')\n\n    shipToAddress = {\n        'name': orderData.get('receiverInfo', {}).get('receiverName', ''),\n        'address1': orderData.get('receiverInfo', {}).get('receiverDistrict', ''),\n        'address2': orderData.get('receiverInfo', {}).get('receiverAddress', ''),\n        'phone': orderData.get('receiverInfo', {}).get('receiverPhone', ''),\n        'city': orderData.get('receiverInfo', {}).get('receiverCity', ''),\n        'state': orderData.get('receiverInfo', {}).get('receiverProvince', ''),\n        'zipCode': orderData.get('receiverInfo', {}).get('receiverZipCode', ''),\n        'country': orderData.get('receiverInfo', {}).get('receiverCountry', '')\n    }\n    shipFromAddress = {\n        'firstName': orderData.get('senderInfo', {}).get('senderName', ''),\n        'address1': orderData.get('senderInfo', {}).get('senderDistrict', ''),\n        'address2': orderData.get('senderInfo', {}).get('senderAddress', ''),\n        'phone': orderData.get('senderInfo', {}).get('senderPhone', ''),\n        'city': orderData.get('senderInfo', {}).get('senderCity', ''),\n        'state': orderData.get('senderInfo', {}).get('senderProvince', ''),\n        'zipCode': orderData.get('senderInfo', {}).get('senderZipCode', ''),\n        'country': orderData.get('senderInfo', {}).get('senderCountry', '')\n    }\n\n    carrier = {\n        'name': orderData.get('logisticsCompanyName', ''),\n        'scac': orderData.get('logisticsCompanyNo', '')\n    }\n    OrderType = str(orderData.get('businessType', ''))\n    ShipMethod = 'Small Parcel'\n    if OrderType in ['10']:\n        OrderType = 'DropShip Order'\n        ShipMethod = 'Small Parcel'\n    elif OrderType in ['20', '30', '60']:\n        OrderType = 'Regular Order'\n        ShipMethod = 'LTL'\n    order_attach_data = {\n        'RetailerName': orderData.get('partnerName', ''),\n        'TitleId': orderData.get('companyCode', ''),\n        'OrderType': OrderType,\n        'SubOrderType': orderData.get('businessType', ''),\n        'SCACCode': orderData.get('logisticsCompanyNo', ''),\n        'CarrierName': orderData.get('logisticsCompanyName', ''),\n        'DeliveryService': orderData.get('logisticsServiceNo', ''),\n        'MISC02': orderData.get('logisticsServiceName', ''),\n        'MISC03': orderData.get('receiverCountryIdentifier', ''),  # 使用 get 方法并提供默认值\n        'MISC04': orderData.get('receiverTaxNo', ''),  # 使用 get 方法并提供默认值\n        'MISC14': orderData.get('shopNo', ''),\n        'MISC15': orderData.get('wmsShopNo', ''),\n        'MISC16': orderData.get('callbackUrl', ''),\n        'note': orderData.get('remark', ''),\n        'RequirePrintPackingList': orderData.get('needPrintPackingList', ''),\n        'shipFromAddress': shipFromAddress\n    }\n\n    products = orderData.get('orderLineList', {})\n\n    for product in products:\n        batches = product.get('batches', [])\n        extension = product.get('extension', {})\n        if batches:\n            batchNo = batches[0].get('batchNo', '')\n            if batchNo is not None and batchNo != '':\n                for batch in batches:\n                    item_attach_data = {\n                        'sn': batch.get('snNoList', []),\n                        'GoodsType': product.get('qualityLevel', ''),\n                        'DTLMISC02': batch.get('batchName', ''),\n                        'DTLMISC03': batch.get('originArea', ''),\n                        'DTLMISC04': extension.get('so', ''),\n                        'DTLMISC05': extension.get('price', 0),\n                        'DTLMISC06': extension.get('currency', ''),\n                        'DTLMISC07': extension.get('supplierItem', ''),\n                        'DTLMISC08': extension.get('customerItem', ''),\n                        'DTLMISC09': extension.get('customerPo', '')\n                    }\n                    itemLine = {\n                        'poLineNo': product.get('lineNo', ''),\n                        'itemDescription': product.get('skuName', ''),\n                        'itemSku': product.get('skuNo', ''),\n                        'lotNo': batch.get('batchNo', ''),\n                        'qty': batch.get('quantity', 0),\n                        'orderItemAttachData': json.dumps(item_attach_data)\n                    }\n                    itemLines.append(itemLine)\n\n        else:\n            item_attach_data = {\n                'sn': product.get('snNoList', []),\n                'GoodsType': product.get('qualityLevel', ''),\n                'DTLMISC04': extension.get('so', ''),\n                'DTLMISC05': extension.get('price', 0),\n                'DTLMISC06': extension.get('currency', ''),\n                'DTLMISC07': extension.get('supplierItem', ''),\n                'DTLMISC08': extension.get('customerItem', ''),\n                'DTLMISC09': extension.get('customerPo', '')\n            }\n            itemLine = {\n                'poLineNo': product.get('lineNo', ''),\n                'itemDescription': product.get('skuName', ''),\n                'itemSku': product.get('skuNo', ''),\n                'qty': product.get('quantity', 0),\n                'orderItemAttachData': json.dumps(item_attach_data)\n            }\n            itemLines.append(itemLine)\n\n    businessNo = orderData.get('businessNo', {})\n    salesOrderNo = orderData.get('salesOrderNo', '')\n    if not salesOrderNo:\n        salesOrderNo = businessNo\n    resultData = {\n        'rawData': json.dumps(orderData),\n        'source': 'DI',\n        'tenantId': data.get('tenantId', ''),\n        'merchantId': data.get('merchantId', ''),\n        'channelId': data.get('channelId', ''),\n        'channelName': data.get('channelName', ''),\n        'dataChannel': 'BYTEDANCE_ERP',\n        'status': 'Imported',\n        'orderDate': isoOrderDate,\n        'referenceNo': orderData.get('businessNo', ''),\n        'purchaseOrderNo': orderData.get('businessNo', ''),\n        'channelSalesOrderNumber': salesOrderNo,\n        'carrier': carrier,\n        'buyerFirstName': orderData.get('receiverName', ''),\n        'shipMethod': ShipMethod,\n        'loadDate': final_formatted_time,\n        'deliveryService': orderData.get('logisticsServiceNo', ''),\n        'shipToAddress': shipToAddress,\n        'shipFromAddress': shipFromAddress,\n        'itemLines': itemLines,\n        'orderAttachData': json.dumps(order_attach_data),\n        'freightTerm': 'Collect'\n    }\n\n    return json.dumps(resultData)\n