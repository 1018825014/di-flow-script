def run(data):\n    # to json\n    orderData = json.loads(data['orderData'])\n    warehouseData = json.loads(data['warehouseData'])\n    facilityName = None\n    for warehouse in warehouseData:\n        if warehouse['accountingCode'] == orderData.get('warehouseNo', ''):\n            facilityName = warehouse['warehouseName']\n\n    itemLines = []\n\n    order_attach_data = {\n        'SubReceiptType': orderData.get('subType', ''),\n        'SCACCode': orderData.get('logisticsCompanyNo', ''),\n        'CarrierName': orderData.get('logisticsCompanyName', ''),\n        'DeliveryService': orderData.get('logisticsServiceNo', ''),\n        'DynTxtPropertyValue04': orderData.get('logisticsServiceName', ''),\n        'DynTxtPropertyValue05': orderData.get('tenantDominantNo', ''),\n        'TrackingNo': orderData.get('wayBillNo', ''),\n        'DynTxtPropertyValue07': orderData.get('callbackUrl', ''),\n\n    }\n\n    products = orderData.get('orderDetailList', {})\n\n    for product in products:\n        batches = product.get('batches', [])\n        if batches:\n            batchNo = batches[0].get('batchNo', '')\n            if batchNo is not None and batchNo != '':\n                for batch in batches:\n                    item_attach_data = {\n                        'POLineNo': product.get('lineNo', ''),\n                        'DynTxtPropertyValue02': batch.get('batchName', ''),\n                        'CountryOrigin': batch.get('originArea', '')\n                    }\n                    itemLine = {\n                        'title': product.get('skuName', ''),\n                        'sku': product.get('skuNo', ''),\n                        'lotNo': batch.get('batchNo', ''),\n                        'snList': batch.get('snNoList', []),\n                        'qty': batch.get('quantity', 0),\n                        'productAttachData': json.dumps(item_attach_data)\n                    }\n                    itemLines.append(itemLine)\n\n        else:\n            item_attach_data = {\n                'POLineNo': product.get('lineNo', ''),\n\n            }\n            itemLine = {\n                'sku': product.get('skuNo', ''),\n                'title': product.get('skuName', ''),\n                'qty': product.get('quantity', 0),\n                'snList': product.get('snNoList', []),\n                'orderItemAttachData': json.dumps(item_attach_data)\n            }\n            itemLines.append(itemLine)\n\n    receiptType = str(orderData.get('businessType', ''))\n    if receiptType in ['10', '40', '60']:\n        receiptType = 'Regular Receipt'\n    elif receiptType in ['20', '50', '70', '80']:\n        receiptType = 'Return From End User'\n\n    resultData = {\n        'recipientName': orderData.get('CompanyCode', ''),\n        'referenceNo': orderData.get('businessNo', ''),\n        'receiptType': receiptType,\n        'vendorNo': orderData.get('supplierCode', ''),\n        'vendorName': orderData.get('supplierName', ''),\n        'remark': orderData.get('remark', ''),\n        'rawData': json.dumps(orderData),\n        'sourceType': 1,\n        'tenantId': data.get('tenantId', ''),\n        'merchantId': data.get('merchantId', ''),\n        'channelId': data.get('channelId', ''),\n        'channelName': data.get('channelName', ''),\n        'dataChannel': 'BYTEDANCE_ERP',\n        'status': 'Imported',\n        'facilityCode': orderData.get('warehouseNo', ''),\n        'facilityName': facilityName,\n        'products': itemLines,\n\n        'attachData': json.dumps(order_attach_data)\n    }\n\n    return json.dumps(resultData)\n